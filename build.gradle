/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

plugins {
    id 'java-library'
    id "me.tatarka.retrolambda" version "3.7.0"
    id 'maven-publish'
    id 'jacoco'
    // id 'org.ajoberstar.git-publish' version '1.7.2'
}

repositories {
    jcenter()
    mavenCentral()
}


group = 'de.hsmainz.iiwa'
version = '0.1-SNAPSHOT'

dependencies {
    testImplementation  'junit:junit:4.12'
}


test {
    testLogging.showStandardStreams = true
    useJUnit()

    minHeapSize = "128m"
    maxHeapSize = "512m"
}

jacoco {
    toolVersion = "0.8.2"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath

    options {
        setMemberLevel JavadocMemberLevel.PUBLIC
        setAuthor true

        links "https://docs.oracle.com/javase/8/docs/api/"
    }
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task packageJavadoc(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            artifactId = 'AsyncService'

            from components.java

            artifact sourceJar
            artifact packageJavadoc
            
            pom {

                name = 'AsyncService'
                description = 'Async execution for iiwa robots'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'jonaohland'
                        name = 'Jonas Ohland'
                        email = 'jonas.ohland@hs-mainz.de'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "archiva"
            url = "http://jonasohland.ddns.net:8080/repository/hsmainz"
            credentials {
                username System.getenv("archiva_publish_username")
                password System.getenv("archiva_publish_password")
            }
        }

        maven {
            name = "gitlab"
            url "https://gitlab.rlp.net/api/v4/projects/2644/packages/maven"
            credentials(HttpHeaderCredentials) {
                name = "Job-Token"
                value = System.getenv("CI_JOB_TOKEN")
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}